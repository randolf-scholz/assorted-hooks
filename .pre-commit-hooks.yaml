# Custom hooks for pre-commit.


# region scripts -----------------------------------------------------------------------
- id: pyproject-validate-version
  name: pyproject-validate-version
  description: "Validate python version (PEP-440)."
  entry: "./src/assorted_hooks/scripts/pyproject_validate_version.py"
  files: ^pyproject\.toml$
  language: script
  types: [toml]
- id: pyproject-update-deps
  name: pyproject-update-deps
  description: "Update dependencies to >=currently_installed. (default: manual)"
  entry: "./src/assorted_hooks/scripts/pyproject_update_dependencies.py"
  files: ^pyproject\.toml$
  language: script
  stages: [manual]
  types: [toml]
- id: pyproject-check-deps
  name: pyproject-check-deps
  description: "Check that listed dependencies are used in code and vice-versa."
  entry: "./src/assorted_hooks/scripts/pyproject_check_dependencies.py"
  files: ^pyproject\.toml$
  language: script
  types: [toml]
- id: pyproject-check-unmaintained
  name: pyproject-check-unmaintained
  description: "Check for unmaintained dependencies"
  files: ^pyproject\.toml$
  language: script
  types: [toml]
  entry: "./src/assorted_hooks/scripts/pyproject_check_unmaintained.py"
  additional_dependencies: [aiohttp]
- id: python-check-clean-interface
  name: python-check-clean-interface
  description: "Check that __all__ holds all exported variables."
  entry: "./src/assorted_hooks/scripts/check_clean_interface.py"
  language: script
  require_serial: true # otherwise module is loaded multiple times
  types: [python]
- id: pyright-concise
  name: pyright-concise
  description: 'Wrapper that produces more concise output for pyright.'
  entry: sh -c '! script -c "pyright $*" /dev/null | grep --color=never -Po "(?<=$PWD/)(.*:.*)"' --
  language: script
  'types_or': [python, pyi]
  require_serial: true
  additional_dependencies: []
# endregion scripts --------------------------------------------------------------------


# region pygrep ------------------------------------------------------------------------
- id: check-separator-length
  name: check-separator-length
  description: "Check that 'line-break'-comments are the right length (default: 88)."
  entry: ^(\#.|\%.|\/\/)(.{0,82}|.{84,})([-=—─═])\3{2}$
  language: pygrep
  types: [text]
  # NOTE: This regex checks comments begin with a `#`, `%`, `//` (padded to length 2)
  #   The first group is 0-82 or 84-unlimited characters
  #   The construction `([-=—─═])\2{2}` checks for a separator character repeated 3 times
  #   If the first group matches ≥84 characters, then the line is overlong (2+84+3=89 characters)
  #   If it matches ≤82 characters, then the line is too short, given that it is detected as a separator.
  #   (2 + 83 characters + separator + separator + separator = 88 characters)
  # NOTE: The second group is a separator character, we consider the characters:
  # `-` (U+002D: Hyphen-Minus)
  # `=` (U+003D: Equals Sign)
  # `—` (U+2014: Em Dash)
  # `═` (U+2550: Box Drawings Double Horizontal)
  # `─` (U+2500: Box Drawings Light Horizontal)
- id: python-no-blanket-type-ignore
  name: python-no-blanket-type-ignore
  description: "Enforce that `# type: ignore` annotations always specify codes."
  entry: '.\#\s*(type|pyright)\:\s*ignore(?!\[)'
  language: pygrep
  types: [python]
- id: python-no-builtin-eval
  name: python-no-builtin-eval
  description: "Disallows eval() but allows obj.eval()."
  entry: '(?<!def\s)(?<!\.)\b(builtins\.)?(eval\()'
  language: pygrep
  types: [python]
- id: python-consider-using-raw-string
  name: python-consider-using-raw-string
  description: "Checks that triple quoted strings are raw (docstrings). Use `$1r$2` find/replace."
  entry: '(\A|\s)("""[^\s\.\,\]\)\}][^\\]*?""")'
  language: pygrep
  types: [python]
- id: python-rename-axes-axis
  name: python-rename-axes-axis
  description: "Rename 'axes=' to 'axis=' (numpy convention)."
  entry: '\b(axes=)'
  language: pygrep
  types: [python]
- id: python-system-exit
  name: python-system-exit
  description: "Consider using `raise SystemExit(1)` instead of `sys.exit(1)`."
  entry: '\b(sys\.exit)\('
  language: pygrep
  types: [python]
- id: pyarrow-timestamp-seconds
  name: pyarrow-timestamp-seconds
  description: "Check for usage of second resolution timestamps (https://github.com/apache/arrow/issues/41382)."
  entry: '\b(timestamp\[s\]\[pyarrow\]|timestamp\((unit=)?"s"|datetime64\[s\])'
  language: pygrep
  types: [python]
- id: python-match-case-builtins
  name: python-match-case-builtins
  description: "checks that `str(name)` is used instead of `str() as name`."
  entry: '\b(bool|bytearray|bytes|dict|float|frozenset|int|list|set|str|tuple)\(\)\s+as\s+'
  language: pygrep
  types: [python]
- id: python-match-case-builtins-simple
  name: python-match-case-builtins-simple
  description: "checks that `str(name)` is used instead of `str() as name`."
  entry: '\b(bool|bytearray|bytes|float|int|str)\(\)\s+as\s+'
  language: pygrep
  types: [python]
# endregion pygrep ---------------------------------------------------------------------


# region ast-based ---------------------------------------------------------------------
- id: python-direct-imports
  name: python-direct-imports
  description: "Checks that Bar is used instead of foo.Bar if both foo and Bar are imported."
  entry: check-direct-imports
  language: python
  types: [python]
- id: python-no-mixed-args
  name: python-no-mixed-args
  description: "Check for disallowing positional_or_keyword arguments."
  entry: check-no-mixed-args
  language: python
  types: [python]
- id: python-standard-generics
  name: python-standard-generics
  description: "Use standard generics (PEP-585): typing.Sequence -> abc.Sequence, typing.List -> list."
  entry: check-standard-generics
  language: python
  types: [python]
- id: python-check-dunder-all
  name: python-check-dunder-all
  description: "Check that __all__ exists. `test_*.py` files are excluded by default."
  entry: check-dunder-all
  exclude: '^(.*\/)?test_.*\.py$'
  language: python
  types: [python]
- id: python-check-typing
  name: python-check-typing
  description: "AST-based linting rule for type-hints."
  entry: check-typing
  language: python
  types: [python]
# endregion ast-based ------------------------------------------------------------------


# region misc --------------------------------------------------------------------------
- id: expired-github-issues
  name: expired-github-issues
  description: "Check for expired GitHub issues."
  entry: check-github-issues
  language: python
  stages: [manual]
  types: [text]
# endregion misc -----------------------------------------------------------------------


# region latex -------------------------------------------------------------------------
- id: chktex
  name: chktex
  language: system
  types: [tex]
  description: "ChkTeX, a LaTeX semantic checker."
  entry: "chktex --format='%f:%l:%c %m [%k %n]\n' --quiet"
  require_serial: true  # Otherwise, we get lot's of warning about failed regex compilations
  args:  # default configuration
    - "--erroron=all"
    - "--nowarn=1"   # Command terminated with space.
    - "--nowarn=3"   # Enclose previous parentheses with `{}`.
    - "--nowarn=9"   # ‘%s’ expected, found ‘%s’.
    - "--nowarn=17"  # Number of ‘character’ doesn’t match the number of ‘character’.
    - "--nowarn=19"  # You should use "`’`" (ASCII 39) instead of "`’`" (ASCII 180).
    - "--nowarn=21"  # This command might not be intended.
    - "--nowarn=22"  # Comment displayed.
    - "--nowarn=30"  # Multiple spaces detected in output.
    - "--nowarn=46"  # Use `\(...\)` instead of `$...$`.
- id: lacheck
  name: lacheck
  description: "A consistency checker for LaTeX documents"
  pass_filenames: true
  require_serial: true
  language: script
  types: [tex]
  files: '\.tex$'
  entry: './src/lacheck_wrapper.sh'
  # NOTE: lacheck only takes a single file at a time, so we need to use xargs
  # NOTE: lacheck always returns 0, so we need to grep for output
  # NOTE: grep has exit code 1 if no matches are found, so we need to invert with `!`
  # NOTE: We add a `--` to the end of the command to ensure that no filenames are interpreted as arguments
# endregion latex ----------------------------------------------------------------------
